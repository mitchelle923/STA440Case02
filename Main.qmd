---
title: "Journey to Paris 2024: A Bayesian Approach to Finding the Best Men's and Women's U.S. Gymnastics Teams"
author: "Chris Liang, Enzo Moraes Mescall, Mitchelle Mojekwu, Zoe Svec"
output: 
  pdf_document:
    latex_engine: xelatex
    keep_tex: true
    latex_args: ["-shell-escape"]
geometry: "top=15mm, bottom=15mm, left=15mm, right=15mm"
format: pdf
editor: visual
---

```{r setup-chunk, include = FALSE}
knitr::opts_chunk$set(message = FALSE, echo = FALSE) 
```

```{r}
#| echo: false
#| include: false
#| label: downloading-packages
#| message: false

library(tidyverse)
library(knitr)
library(stringr)
library(dplyr)
library(invgamma)
library(fitdistrplus)
library(kableExtra)
library(cowplot)
library(coda)
library(bayesplot)
library(rstan)  
```

```{r}
#| echo : false
#| label: read-data
#| message: false
#| include: false

#make sure this is forked to github so it's not a local file path
earlydata <- read_csv("Cleaned Data/data_2017_2021.csv")
laterdata <- read_csv("Cleaned Data/data_2022_2023.csv")

#will not be using early dataset because it only contains data about female athletes
early <- earlydata |>
  drop_na(Score, E_Score, D_Score, Apparatus, Round, Location, Competition, Country, Gender)

later <- laterdata |>
  drop_na(Score, E_Score, D_Score, Apparatus, Round, Location, Competition, Country, Gender)
```

## Introduction

The Olympic Games are a highly anticipated world-renowned multi-sporting event that takes place every four years. Particularly the Summer Olympic Games tend to have a wider variety of 32 sports and more viewers than that of the Winter Olympics (Olympics, 2021). Athletes from all over the world can participate granted they meet the criteria established by their nation's Olympic committees and the international sports federations. With female qualifying gymnasts from the United States placing with medals in the team all-around, individual all-around, and each individual apparatus in the 2020 Tokyo Olympics game, there has been a surge in media attention on the United States gymnastics teams (Olympics, 2020).

As the Paris 2024 Summer Olympic Games is approaching, the United States Olympic Men's and Women's Artistic Gymnastics aims to put together a team of 5 each that best represents the country on the world's sporting stage by optimizing medal success amongst the team all-around, individual all-around, and individual apparatus events. At the Paris Olympics, during the qualifications round, from the 5 team members, 4 will compete on each apparatus, and the 3 highest scores will count and be summed. In the finals, the top 8 countries will qualify and compete in team all-around, where from the 5 team members, 3 will compete on each apparatus and all 3 scores will count. In the individual all-around finals, 24 athletes will qualify, with maximum 2 athletes per country. In the individual apparatus finals, 8 athletes will qualify per apparatus with a maximum of 2 athletes per country. The low number of athletes that qualify for the finals suggests there must be thoughtful crafting of the team of 5. This study aims to use the most recent Olympic Games and other world competitions' qualifying and final round results data to best assemble a team that is likely to produce optimal success in terms of medals within the Olympic qualifiers and final criteria (UCSAS, 2023).

The UConn Sports Analytics Symposium provisioned two clean data sets of the accumulation of results of teams worldwide that participated in the major domestic and international gymnastic qualifying and final competition events leading up to the 2024 Summer Olympic Games. The first data set includes includes the results of the 2020 (taking place in 2021) Tokyo Summer Olympics qualifying and final rounds, and the second data set includes competitions in the 2022 and 2023 seasons. Observations for both datasets are at the athlete- and apparatus-level score for an event in a round at a gymnastics competition--for example, Simone Biles's final uneven bars score at the 2023 US Gymnastics Championships. It is worth noting, however, that the data from the Tokyo Olympics only include results for women's gymnastics, while the data from 2022-2023 include results for both men's and women's gymnastics. The data are collected from the results on each corresponding competition's official website, which are results from the officially judged scores of each competition. Variables in the data sets include first and last names of each athlete, gender, country, date of competition, name of competition, the round of the competition (e.g. qualifier or final of an individual apparatus, individual all-around, or team event), the location of the competition, apparatus (women compete in "BB": balance beam, "FX": floor exercise, "UB": uneven bars, and "VT": vault; men compete in "FX": floor exercise, HB": high bar, "PB": parallel bars, "PH": pommel horse, "SR": still rings, "VT": vault; beyond the floor and vault overlap, both men and women may compete in vaults "VT1" and "VT2", which are 2 different vaults required in individual apparatus qualifications and finals), the execution score, difficulty score, penalty, and final score for that athlete on that apparatus, and the rank of that athlete in that apparatus and round.

We decided to not proceed in using the data set of results from the Tokyo Summer Olympics since the data consisted only of female athletes and one competition (the Olympic Games). Additionally, in the context of Olympic gymnastics, athletes of age 16 and older are eligible to compete but gymnastics is a sport in which most athletes retire in their early to mid-twenties. Specifically in the summer 2020 Tokyo Olympics only three female athletes aged 27 or older qualified to compete (Camenker, 2021). Furthermore, the average age for female gymnasts in the 2020 Olympics was approximately 22 years of age, meaning we assume that many of the competitors in the older data set will not be competing in the 2024 Paris Summer Olympics (Meyers, 2021).

We have the following objectives for this study: (UCSAS, 2023)

1)  Decide on whether to maximize total medal count, gold medal count, or a weighted medal count (e.g., 3 for gold, 2 for silver, 1 for bronze).

2)  Decide on whether to value the medals of an event over others. For example, consider a team all-around medal to be more valuable than the individual all-around medals and/or consider the individual all-around medals to be more valuable than the individual apparatus medals.

3)  Decide on whether Team USA should maximize its total medal count by selecting a team of five gymnasts who are all-around gymnasts, event specialists (gymnasts who focus on 1 or more apparatus but not all apparatus), or a combination of those. This should consider under what circumstances can Team USA maximize its total medal count by selecting a gymnast who only competes on 1 apparatus (e.g., Stephen Nederoscik, 2021 pommel horse World Champion).

4)  Identify the group of five athletes who will most likely enable the Team USA Olympic Men's and Women's Artistic Gymnastics team to maximize medals won in the Paris 2024 Summer Olympics using an analytical model.

Addressing these objectives will assist the national Olympic Artistic Gymnastics teams in best approaching the Olympic gymnastics events in totality by offering recommended strategies to best approach team selection. In our analysis of the best fit US male and female gymnastics teams for the Paris Olympics, we will undertake a Bayesian approach to simulate outcomes of individual athletes' scores in an apparatus. Bayesian frameworks in sports analytics to simulate athlete's results are well-documented and have seen a rise in popularity in the past decade (Santos-Fernandez, et. al., 2019). For instance, Yang and Swartz use Monte Carlo Markov Chains to simulate the outcomes of baseball games (Yang et. al., 2022). We will build upon these analyses and choose the appropriate Bayesian method to simulate outcomes of gymnast results in each apparatus, after which we will analyze the top performers in each apparatus, assign medals, and find the best combination of athletes.

### Exploratory Data Visualizations

We created some exploratory data visualizations to examine the distributions of athlete scores and examine the performance of US athletes relative to other countries. We find that from the density plots of male and female athletes' overall scores (difficulty score + execution score - penalty = overall score) per apparatus that the scores are approximately normally distributed for the apparatuses for both genders. There are some slight deviations from normality, namely women's vault scores and uneven bars scores are slightly skewed left and men's still rings scores have a slight dip in the peak. Nonetheless, the approximate normality of the distribution of athlete's scores by apparatus informs our bayesian approach, as we may use normal priors for our data. Furthermore, we plotted the number of athletes per country in the top 10 of each apparatus internationally, top 10 meaning the athletes with top 10 highest mean scores for each apparatus. For example, we see that for women's vault, 6 of the top 10 athletes in the world are US gymnasts. These plots help inform us of if we should be thinking about specialists or generalists in the US team combinations. We see that the top 10 for each apparatus have a high concentration of US female gymnasts, so we may want specialists in our team makeup, whereas that case does not transfer to the US male gymnasts, as there are few US male gymnasts in the top 10 for the floor exercise, high bar, pommel horse, and still rings apparatuses. In the men's case, we may not want to send specialists to take up a spot on team of five, and we shall explore this conjecture in our simulations.

```{r score-distributions}

#womens score distributions by apparatus
womensdist <- combined |>
  filter(Gender == "w") |>
  ggplot(aes(x = Score)) +
  geom_density() +
  facet_wrap(~ Apparatus) +
   labs(title = "Distribution of Female Gymnasts' Overall Scores",
       subtitle = "By Apparatus",
       x = "Overall Score",
       y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(size = 8),
        plot.subtitle = element_text(size = 7),
        axis.text = element_text(size = 7),
        axis.title = element_text(size = 7))


#mens score distributions by apparatus
mensdist <- combined |>
  filter(Gender == "m") |>
  ggplot(aes(x = Score)) +
  geom_density() +
  facet_wrap(~ Apparatus) +
   labs(title = "Distribution of Male Gymnasts' Overall Scores",
       subtitle = "By Apparatus",
       x = "Overall Score",
       y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(size = 8),
        plot.subtitle = element_text(size = 7),
        axis.text = element_text(size = 7),
        axis.title = element_text(size = 7))

plot_grid(womensdist, mensdist, ncol=2)
```

```{r top-10-athletes}
top_10_f_means <- combined_apparatus |>
  filter(Gender == "w") |>
  group_by(Apparatus, unique_id) |>
  arrange(Apparatus, desc(mean_score)) |>
  group_by(Apparatus) |>
  slice_head(n = 10) |>
  ungroup()

topwomens <- top_10_f_means |>
  ggplot(aes(x = Country, fill = ifelse(Country == "USA", "Is USA", "Not USA"))) +
  geom_bar() + 
  scale_fill_manual(values = c("Is USA" = "red", "Not USA" = "grey50")) +
  labs(title = "Number of Female Athletes in \n Top 10 of Each Apparatus",
       subtitle = "By Athlete's Mean Apparatus Score and Country",
       x = "Country the Athlete Represents",
       y = "Number of Female Athletes in \n Top 10 of Each Apparatus") +
  theme_minimal() +
  theme(legend.position = "none",
        plot.title = element_text(size = 8),
        plot.subtitle = element_text(size = 7),
        axis.text = element_text(size = 7),
        axis.title = element_text(size = 7)) +
  facet_wrap(~ Apparatus, scales = "free_x") + 
  coord_flip()


top_10_m_means <- combined_apparatus |>
  filter(Gender == "m") |>
  group_by(Apparatus, unique_id) |>
  arrange(Apparatus, desc(mean_score)) |>
  group_by(Apparatus) |>
  slice_head(n = 10) |>
  ungroup()

topmens <- top_10_m_means |>
  ggplot(aes(x = Country, fill = ifelse(Country == "USA", "Is USA", "Not USA"))) +
  geom_bar() + 
  scale_fill_manual(values = c("Is USA" = "red", "Not USA" = "grey50")) +
  labs(title = "Number of Male Athletes in \n Top 10 of Each Apparatus",
       subtitle = "By Athlete's Mean Apparatus Scores and Country",
       x = "Country the Athlete Represents",
       y = "Number of Male Athletes in \n Top 10 of Each Apparatus") +
  theme_minimal() +
  theme(legend.position = "none",
        plot.title = element_text(size = 8),
        plot.subtitle = element_text(size = 7),
        axis.text = element_text(size = 5),
        axis.title = element_text(size = 7)) +
  facet_wrap(~ Apparatus, scales = "free_x") + 
  coord_flip()

plot_grid(topwomens, topmens, ncol=2)
```

## Methodology

Prior to conducting simulations, we cleaned our data set on the 2022-2023 gymnastics competition results. There were several cases of missing or inconsistent athlete first and last names, so we created unique athlete IDs using string methods by using the first three letters of an athlete's first name, the first three letters of an athlete's last name, and the country code. We made sure to add in missing names and account for names with less than three characters. Furthermore, the apparatus code for high bar was inconsistent across the Commonwealth Games and all other competitions, so we made sure to consolidate high bar into one apparatus code. Because individual apparatus qualifying vaults needed athletes to compete two different vaults (VT1, VT2) as opposed to one vault in the finals or team or all-around events, we decided to take the higher of the two vault scores for an athlete for a competition, if there were two vaults completed, and consolidated that score as one vault apparatus code. We decided to keep the higher score given the vaults were different, and athletes likely compete with the vault that gives them the higher score during event finals.

We then proceeded to cut down on the number of observations in our dataset for two purposes: 1) so that our simulations later could run more quickly, and 2) we felt that it was unnecessary to simulate scores for athletes that had little to no chance of medaling given their previous records, given the scarcity of athletes that will attend the Olympic finals. To filter the observations, we first removed any individual athletes entirely who had never made the finals in any event in any competition in the data set. Afterwards, we created quantiles of 20% increments and 10% increments for each round in a competition for each apparatus, separated by gender because men and women compete separately. We checked the number of unique athletes that competed at each competition in each round (see Appendix), and found that for all rounds in competitions other than the Oceania Championships, at least 36 unique athletes participated. For some rounds, hundreds of athletes participated--so we decided to filter for: if more than 100 athletes competed in a round in an apparatus, then we filtered for athletes' scores in the top 10%; if less than 100 athletes competed in a round in an apparatus, then we filtered for athletes' scores in the top 20%; for the Oceania Championships, we filtered for the top 40% (four athletes). The reason we adopted a quantile-based filtering approach is because of the variation in number of athletes competed at different competitions, so simply taking the top 20 athletes, for example, of each competition may not account for that variation. Our last method of filtering was to remove observations of athletes' scores for apparatuses if an athlete had not competed more than twice in that apparatus in the entire 2022-2023 data set. Our rationale was that there were 37 distinct competitions in the data set, so if an athlete has not competed more than twice in the past two years in an apparatus, they are likely not that active in that apparatus. Additionally, filtering for athletes' scores when an athleted has competed in that apparatus more than twice allows us to find a variance and mean for that athlete's performance on an apparatus. We are left with 2210 observations in our filtered data set to conduct simulations, with 157 unique male athletes and 88 unique female athletes.

```{r data-cleaning, message = FALSE}
#indonesian gymnast's name is Abiyu RAFI not ABIYURAFI
laterdata <- laterdata |>
  mutate(FirstName = ifelse(LastName == "ABIYURAFI" & FirstName == ".", "Abiyu", FirstName),
    LastName = ifelse(LastName == "ABIYURAFI", "RAFI", LastName),
    Apparatus = if_else(Apparatus == 'hb', 'HB', Apparatus))


laterdata <- laterdata |>
  mutate(firstname_check = ifelse(str_length(FirstName) >= 3, 1, 0),
         lastname_check = ifelse(str_length(LastName) >= 3, 1, 0))

laterdata <- laterdata |>
  mutate(FirstName = ifelse(firstname_check == 0, paste0(FirstName, "_"), FirstName),
         LastName = ifelse(lastname_check == 0, paste0(LastName, "_"), LastName))

#based on string methods -- creating unique athlete IDs
laterdata <- laterdata |>
  mutate(unique_id = paste0(str_sub(FirstName, 1, 3), str_sub(LastName, 1, 3), "_", Country))

#create a vector for AA or team
AA_team <- c("AAfinal", "TeamFinal", "TeamQual", "AAqual")
'%notin%' <- function(x,y)!('%in%'(x,y))

finals_vector <- c("AAfinal", "TeamFinal", "final")

#basically take the highest vault if there's a VT1 and VT2 since the vaults need to be different, and you would perform the harder/higher vault in the final

mutated_data <- laterdata |>
  filter(Apparatus %notin% c("VT1", "VT2"))

vaults_set <- laterdata |>
  filter(Apparatus %in% c("VT1", "VT2")) |>
  group_by(unique_id, Competition, Round, Apparatus, Gender, FirstName, LastName, Date, Location, Rank, Country, firstname_check, lastname_check) |>
  summarise(
    Score = max(Score, na.rm = TRUE),
    E_Score = E_Score[which.max(Score)],
    D_Score = D_Score[which.max(Score)],
    Penalty = Penalty[which.max(Score)],
    .groups = 'drop'
  ) |>
  mutate(Apparatus = ifelse(Apparatus == "VT1", "VT", "VT"))

#need to join the vaults set back with og data

laterdata <- mutated_data |>
  left_join(vaults_set)

#now there are no more VT1s or VT2s --> down to 18423 obs

```

```{r quantiling, message = FALSE}
#these quantiles are already grouped by gender and competition, round, apapratus, etc. so no bleeding
quantiled_data <- laterdata |>
  group_by(Gender, Competition, Round, Apparatus) |>
  mutate(quantile_20s = ntile(-Score, 5),
         quantile_10s = ntile(-Score, 10))

#filter out the athletes who have NEVER made it to a final, ever
filtered_data <- quantiled_data |>
  group_by(unique_id) |>
  filter(any(Round == "final" | Round == "TeamFinal" | Round == "AAfinal")) |>
  ungroup()

#summary of number of athletes competed in each competition in each round
number_athletes <- filtered_data |>
  group_by(Competition, Round) |>
  summarise(athletes_participated = n_distinct(unique_id))


# at the oceania continental championships, only 10 unique athletes competed
# every other competition at each round has at minimum 36 athletes competing
#at these final rounds, there are at least 40 athletes in each final, so it's fine
#going to left join to show the number of athletes that participated per round

joined_data <- filtered_data |>
  left_join(number_athletes, by = c("Competition", "Round"))

#now the athletes_participated column = how many athletes competed in it


#this filters out the individual records for ppl who were not in top quantiles at a competition
final_data <- joined_data |>
  filter((athletes_participated <= 100 & quantile_20s == 1) | (athletes_participated > 100 & quantile_10s == 1) | (Competition == "Oceania Continental Championships 2023" & quantile_20s %in% c(1, 2)))

#now let's check the number of unique athletes left
# final_data |>
#   group_by(Country) |>
#   summarise(athletes_left = n_distinct(unique_id))

#there are 679 athletes left in total once we have filtered, USA still has 91 left
```

```{r removing-obs, message = FALSE}
#summary stats for each athlete for each apparatus
combined_apparatus <- final_data |>
  group_by(Apparatus, unique_id, Country, Gender) |>
  summarise(mean_score = mean(Score),
            var_score = var(Score),
            number_obs = n(),
            mean_D = mean(D_Score),
            var_D = var(D_Score),
            mean_E = mean(E_Score),
            var_E = var(E_Score)) |>
  filter(number_obs >= 3)

combined <- final_data |>
  left_join(combined_apparatus, by = c("Apparatus", "unique_id", "Country", "Gender"))

# USE THIS DF FOR RUNNING SIMS
combined <- combined |>
  filter(!is.na(number_obs))

#combined now has 2210 obs instead of 4040 obs -- using this to run sims
```


### Simulations

INSERT METHODOLOGY ON SIMULATIONS/BAYESIAN STUFF HERE

```{r fitting-priors}
fit_normal_priors <- function(data, apparatus, gender) {
  #fitting normal prior for mean scores
  normal_mu_fit <- fitdist(data$mean_score, "norm")
  #fitting inv gamma prior for variance of scores
  invgamma_var_fit <- fitdist(data$var_score, "invgamma")
  
  m_0 <-  normal_mu_fit$estimate[[1]]
  sig_0 <- normal_mu_fit$estimate[[2]]
  k_0 <- invgamma_var_fit$estimate[[1]] 
  v_0 <- invgamma_var_fit$estimate[[2]]

  return(c(m_0 = m_0, sig_0 = sig_0, k_0 = k_0, v_0 = v_0))
}
```

```{r simulation-function}
#code for simulations, inspired by STA360/peter hoff textbook

analyze_athlete <- function(athlete_results, m_0, sig_0, k_0, v_0, smc = 1000) {
  n <- length(athlete_results)
  ybar <- mean(athlete_results)
  var <- var(athlete_results)
  
  #NEED TO CHECK THIS BAYESIAN
  k_n <- k_0 + n
  v_n <- v_0 + n
  m_n <- (k_0*m_0 + n*ybar)/k_n
  sig_n <- (v_0*sig_0 + (n-1)*var + k_0*n*(ybar - m_0)**2/k_n)/v_n
  sig_sample <- mean(rinvgamma(smc, v_n/2, sig_n*v_n/2))
  theta_sample <- mean(rnorm(smc, m_n, sqrt(sig_sample/k_n)))
  
  return(c(theta_sample, sig_sample))
}
```

```{r creating-medals}
# So this represents one simulation, we could probably run this like 1000 times and average out the medal counts
simulate_results <- function(data, apparatus, gender, m_0, sig_0, k_0, v_0, medals = TRUE) {
  simul_data <- data %>%
    filter(Apparatus == apparatus
           , Gender == gender) %>%
    group_by(unique_id) %>%
    summarise(mean_estimate = analyze_athlete(Score, m_0 = m_0, sig_0 = sig_0, k_0 = k_0, v_0 = v_0)[1],
              var_estimate = analyze_athlete(Score, m_0 = m_0, sig_0 = sig_0, k_0 = k_0, v_0 = v_0)[2],
              observations = n(), .groups = "keep") %>%
    rowwise() %>%
    mutate(simulated_Score = rnorm(1, mean_estimate, var_estimate)) %>% # Truncate scores > 10
    mutate(simulated_Score = ifelse(simulated_Score > 20, 10, simulated_Score)) %>% # Truncate scores < 0
    mutate(simulated_Score = ifelse(simulated_Score < 0, 0, simulated_Score)) 
  
  if (medals == TRUE) {
    # order by top 3 results and assign gold, silver, bronze
    simul_data <- simul_data %>%
      ungroup() %>%
      arrange(desc(simulated_Score)) %>%
      mutate(medal = case_when(row_number() == 1 ~ "Gold",
                               row_number() == 2 ~ "Silver",
                               row_number() == 3 ~ "Bronze",
                               TRUE ~ "NA"))
    
  }
  return(simul_data)
}
```

```{r competition-simulation }
# full competition simulation, gets pretty slow with 1000 simulations
simulate_full_competition <- function(data, apparatus, gender, mu_0, sig_0, k_0, v_0, smc) {
  athletes_medals <- data %>%
    dplyr::select(unique_id) %>%
    distinct() %>%
    mutate(Golds = 0, Silvers = 0, Bronzes = 0, Total_Medals = 0)
  
  for (i in 1:smc) {    
    big_simul <- simulate_results(data, apparatus, gender, mu_0, sig_0, k_0, v_0, TRUE) %>%
      filter(medal != "NA")
    
    big_simul <- big_simul %>%
      group_by(unique_id) %>%
      summarise(Golds = sum(medal == "Gold"),
                Silvers = sum(medal == "Silver"),
                Bronzes = sum(medal == "Bronze"),
                Total_Medals = sum(medal != "NA"),
                .groups = "keep") %>%
      ungroup()
    
    athletes_medals <- athletes_medals %>%
      left_join(big_simul, by = c("unique_id")) %>%
      mutate(Golds = ifelse(is.na(Golds.y), Golds.x, Golds.y + Golds.x),
             Silvers = ifelse(is.na(Silvers.y), Silvers.x, Silvers.y + Silvers.x),
             Bronzes = ifelse(is.na(Bronzes.y), Bronzes.x, Bronzes.y + Bronzes.x),
             Total_Medals = ifelse(is.na(Total_Medals.y), Total_Medals.x, Total_Medals.y + Total_Medals.x)) %>%
      dplyr::select(unique_id, Golds, Silvers, Bronzes, Total_Medals) %>%
      arrange(desc(Total_Medals))
  } 
  return(athletes_medals)
}
```

## Results

We ran simulations for each apparatus for each gender (women's 4 apparatuses and men's 6 apparatuses) 500 times.

(NEED TO ADD MORE)

### Female Athletes' Results

For women's apparatuses, we outputted the tables of simulation outcomes for floor exercise, balance beam, and vault because of the high presence of medals for US gymnasts. The table of simulation outcomes for uneven bars is in the appendix.

```{r FX-womens-sims}
set.seed(123)

fxw_prior_parameters <- suppressWarnings(fit_normal_priors(combined_apparatus, "FX", "w"))

mu_0 <- fxw_prior_parameters[1]
sig_0 <- fxw_prior_parameters[2]
k_0 <- fxw_prior_parameters[3]
v_0 <- fxw_prior_parameters[4]

FX_w_simul <- simulate_full_competition(combined, "FX", "w", mu_0, sig_0, k_0, v_0, 100)

FX_w_simul |>
  head(10) |>
  kable(caption = "Women's Floor Exercise Simulation Results ", col.names = c("Athlete", "Golds", "Silvers", "Bronzes", "Total Medals")) |>
  kable_styling(font_size = 9, latex_options = "HOLD_position")
```

```{r BB-womens-sims}
set.seed(123)

bbw_prior_parameters <- suppressWarnings(fit_normal_priors(combined_apparatus, "BB", "w"))

mu_0 <- bbw_prior_parameters[1]
sig_0 <- bbw_prior_parameters[2]
k_0 <- bbw_prior_parameters[3]
v_0 <- bbw_prior_parameters[4]

BB_w_simul <- simulate_full_competition(combined, "BB", "w", mu_0, sig_0, k_0, v_0, 100)
BB_w_simul |>
  head(10) |>
  kable(caption = "Women's Balance Beam Simulation Results ", col.names = c("Athlete", "Golds", "Silvers", "Bronzes", "Total Medals")) |>
  kable_styling(font_size = 9, latex_options = "HOLD_position")
```

```{r VT-womens-sims}
set.seed(123)

vtw_prior_parameters <- suppressWarnings(fit_normal_priors(combined_apparatus, "VT", "w"))

mu_0 <- vtw_prior_parameters[1]
sig_0 <- vtw_prior_parameters[2]
k_0 <- vtw_prior_parameters[3]
v_0 <- vtw_prior_parameters[4]

VT_w_simul <- simulate_full_competition(combined, "VT", "w", mu_0, sig_0, k_0, v_0, 100)
VT_w_simul |>
  head(10) |>
  kable(caption = "Women's Vault Simulation Results ", col.names = c("Athlete", "Golds", "Silvers", "Bronzes", "Total Medals")) |>
  kable_styling(font_size = 9, latex_options = "HOLD_position")
```

```{r UB-women-sims}
set.seed(123)

ubw_prior_parameters <- suppressWarnings(fit_normal_priors(combined_apparatus, "UB", "w"))

mu_0 <- ubw_prior_parameters[1]
sig_0 <- ubw_prior_parameters[2]
k_0 <- ubw_prior_parameters[3]
v_0 <- ubw_prior_parameters[4]

UB_w_simul <- simulate_full_competition(combined, "UB", "w", mu_0, sig_0, k_0, v_0, 100)
```

### Male Athletes' Results

For men's apparatuses, we outputted the tables of simulation outcomes for vault and parallel bars because of the high presence of medals for US gymnasts relative to the other apparatuses. The tables of simulation outcomes for floor exercise, still rings, pommel horse, and high bar are in the appendix.

```{r FX-men-sims}
set.seed(123)

fxm_prior_parameters <- suppressWarnings(fit_normal_priors(combined_apparatus, "FX", "m"))

mu_0 <- fxm_prior_parameters[1]
sig_0 <- fxm_prior_parameters[2]
k_0 <- fxm_prior_parameters[3]
v_0 <- fxm_prior_parameters[4]

FX_m_simul <- simulate_full_competition(combined, "FX", "m", mu_0, sig_0, k_0, v_0, 100)
```

```{r VT-men-sims}
set.seed(123)

vtm_prior_parameters <- suppressWarnings(fit_normal_priors(combined_apparatus, "VT", "m"))

mu_0 <- vtm_prior_parameters[1]
sig_0 <- vtm_prior_parameters[2]
k_0 <- vtm_prior_parameters[3]
v_0 <- vtm_prior_parameters[4]

VT_m_simul <- simulate_full_competition(combined, "VT", "m", mu_0, sig_0, k_0, v_0, 100)

VT_m_simul |>
  head(10) |>
  kable(caption = "Men's Vault Simulation Results ", col.names = c("Athlete", "Golds", "Silvers", "Bronzes", "Total Medals")) |>
  kable_styling(font_size = 9, latex_options = "HOLD_position")
```

```{r PH-men-sims}
set.seed(123)

phm_prior_parameters <- suppressWarnings(fit_normal_priors(combined_apparatus, "PH", "m"))

mu_0 <- phm_prior_parameters[1]
sig_0 <- phm_prior_parameters[2]
k_0 <- phm_prior_parameters[3]
v_0 <- phm_prior_parameters[4]

PH_m_simul <- simulate_full_competition(combined, "PH", "m", mu_0, sig_0, k_0, v_0, 100)
```

```{r HB-men-sims}
set.seed(123)

hbm_prior_parameters <- suppressWarnings(fit_normal_priors(combined_apparatus, "HB", "m"))

mu_0 <- hbm_prior_parameters[1]
sig_0 <- hbm_prior_parameters[2]
k_0 <- hbm_prior_parameters[3]
v_0 <- hbm_prior_parameters[4]

HB_m_simul <- simulate_full_competition(combined, "HB", "m", mu_0, sig_0, k_0, v_0, 100)
```

```{r SR-men-sims}
set.seed(123)

srm_prior_parameters <- suppressWarnings(fit_normal_priors(combined_apparatus, "SR", "m"))

mu_0 <- srm_prior_parameters[1]
sig_0 <- srm_prior_parameters[2]
k_0 <- srm_prior_parameters[3]
v_0 <- srm_prior_parameters[4]

SR_m_simul <- simulate_full_competition(combined, "SR", "m", mu_0, sig_0, k_0, v_0, 100)
```

```{r PB-men-sims}
set.seed(123)

pbm_prior_parameters <- suppressWarnings(fit_normal_priors(combined_apparatus, "PB", "m"))

mu_0 <- pbm_prior_parameters[1]
sig_0 <- pbm_prior_parameters[2]
k_0 <- pbm_prior_parameters[3]
v_0 <- pbm_prior_parameters[4]

PB_m_simul <- simulate_full_competition(combined, "PB", "m", mu_0, sig_0, k_0, v_0, 100)

PB_m_simul |>
  head(10) |>
  kable(caption = "Men's Parallel Bars Simulation Results ", col.names = c("Athlete", "Golds", "Silvers", "Bronzes", "Total Medals")) |>
  kable_styling(font_size = 9, latex_options = "HOLD_position")
```

```{r include = FALSE}
#LARGE WOMEN'S SIMULATION TABLE W/ ALL POSSIBLE MEDAL METRICS
FX_w_copy <- FX_w_simul
#Creates country variable
FX_w_copy$Country <- factor(sub(".+_([A-Z]+)", "\\1", FX_w_copy$unique_id))
#adds medal weight variable
FX_w_copy$Medal_Weight <- (FX_w_copy$Golds*3) + (FX_w_copy$Silvers*2) + (FX_w_copy$Bronzes*1)
#adds apparatus to facet by later on in visuals
FX_w_copy$Apparatus <- "FX"

BB_w_copy <- BB_w_simul
BB_w_copy$Country <- factor(sub(".+_([A-Z]+)", "\\1", BB_w_copy$unique_id))
BB_w_copy$Medal_Weight <- (BB_w_copy$Golds*3) + (BB_w_copy$Silvers*2) + (BB_w_copy$Bronzes*1)
BB_w_copy$Apparatus <- "BB"

VT_w_copy <- VT_w_simul
VT_w_copy$Country <- factor(sub(".+_([A-Z]+)", "\\1", VT_w_copy$unique_id))
VT_w_copy$Medal_Weight <- (VT_w_copy$Golds*3) + (VT_w_copy$Silvers*2) + (VT_w_copy$Bronzes*1)
VT_w_copy$Apparatus <- "VT"

UB_w_copy <- UB_w_simul
UB_w_copy$Country <- factor(sub(".+_([A-Z]+)", "\\1", UB_w_copy$unique_id))
UB_w_copy$Medal_Weight <- (UB_w_copy$Golds*3) + (UB_w_copy$Silvers*2) + (UB_w_copy$Bronzes*1)
UB_w_copy$Apparatus <- "UB"

#Joins all women's medal results table for facet wrapping

#HAVE TO EVENTUALLY ADD VT1 and VT2!!
tot_w_simul <- bind_rows(FX_w_copy,BB_w_copy, VT_w_copy, UB_w_copy)
tot_w_simul <- tot_w_simul %>% 
  mutate(USA = as.factor(ifelse(Country == "USA", "USA", "nonUSA")))
tot_w_simul
```

```{r include = FALSE}
#LARGE MEN'S SIMULATION TABLE W/ ALL POSSIBLE MEDAL METRICS

FX_m_copy <- FX_m_simul
#Creates country variable
FX_m_copy$Country <- factor(sub(".+_([A-Z]+)", "\\1", FX_m_copy$unique_id))
#adds medal weight variable
FX_m_copy$Medal_Weight <- (FX_m_copy$Golds*3) + (FX_m_copy$Silvers*2) + (FX_m_copy$Bronzes*1)
#adds apparatus to facet by later on in visuals
FX_m_copy$Apparatus <- "FX"

VT_m_copy <- VT_m_simul
VT_m_copy$Country <- factor(sub(".+_([A-Z]+)", "\\1", VT_m_copy$unique_id))
VT_m_copy$Medal_Weight <- (VT_m_copy$Golds*3) + (VT_m_copy$Silvers*2) + (VT_m_copy$Bronzes*1)
VT_m_copy$Apparatus <- "VT"

PH_m_copy <- PH_m_simul
PH_m_copy$Country <- factor(sub(".+_([A-Z]+)", "\\1", PH_m_copy$unique_id))
PH_m_copy$Medal_Weight <- (PH_m_copy$Golds*3) + (PH_m_copy$Silvers*2) + (PH_m_copy$Bronzes*1)
PH_m_copy$Apparatus <- "PH"

HB_m_copy <- HB_m_simul
HB_m_copy$Country <- factor(sub(".+_([A-Z]+)", "\\1", HB_m_copy$unique_id))
HB_m_copy$Medal_Weight <- (HB_m_copy$Golds*3) + (HB_m_copy$Silvers*2) + (HB_m_copy$Bronzes*1)
HB_m_copy$Apparatus <- "HB"

SR_m_copy <- SR_m_simul
SR_m_copy$Country <- factor(sub(".+_([A-Z]+)", "\\1", SR_m_copy$unique_id))
SR_m_copy$Medal_Weight <- (SR_m_copy$Golds*3) + (SR_m_copy$Silvers*2) + (SR_m_copy$Bronzes*1)
SR_m_copy$Apparatus <- "SR"

PB_m_copy <- PB_m_simul
PB_m_copy$Country <- factor(sub(".+_([A-Z]+)", "\\1", PB_m_copy$unique_id))
PB_m_copy$Medal_Weight <- (PB_m_copy$Golds*3) + (PB_m_copy$Silvers*2) + (PB_m_copy$Bronzes*1)
PB_m_copy$Apparatus <- "PB"

#Joins all men's medal results table for facet wrapping

#HAVE TO EVENTUALLY ADD VT1 and VT2!!
tot_m_simul <- bind_rows(FX_m_copy, VT_m_copy,PH_m_copy, HB_m_copy,SR_m_copy, PB_m_copy)
tot_m_simul <- tot_m_simul %>% 
  mutate(USA = as.factor(ifelse(Country == "USA", "USA", "nonUSA")))
tot_m_simul
```

### Objective 1: Choice of Medal Success Metric (Total Number of Gold Medals)

From the dot plot visualizations of the women's simulation of the three considered success metrics (gold medal count, total medal count, and weighted medal count) for each apparatus by USA and non-USA teams, there looks to be at least one USA athlete that places higher than of all non-USA athletes in each medal metric for each apparatus except uneven bars (Appendix: Image 5). The women's USA team makes up 51% of the total women's gold medals in the simulation which is a higher proportion than the 47% of the total medal count and 48% of the weighted medals (Appendix: Image 7). From the dot plot visualizations of the men's simulation of the three considered success metrics, for each apparatus by USA and non-USA teams, there are non-USA athletes for each apparatus that exceed the USA in each medal success metric (Appendix: Image 6). The men's USA team makes up 24% of the total medal count in the simulation which is a higher proportion than the 21% of the total gold medal count and 23% of the weighted medals. (Appendix: Image 8) When viewing the top 5 most successful female athletes (top 5 most decorated by that medal metric) in each apparatus for each medal success metric, the USA makes a good portion of these athletes. There tend to be 2-4 USA athletes in the top 5 depending on the success metric and apparatus (Appendix: Image 7). When viewing the top 5 most successful male athletes in each apparatus for each medal success metric, there tend to be 0-3 (mostly 0) US male athletes present (Appendix: Image 8).

Considering that female USA medalists tend to represent a much higher proportion of medal successes (no matter the success metric) than male USA athletes, it is best to prioritize the success metric that the female team performs the best in. Also viewing the male top 5 most decorated athlete by each metric for each apparatus, the men's USA team has a higher proportion of athletes in the top 5 when using the total number of gold medals as a success metric (Appendix: Image 8). Therefore, the success metric that we aim to maximize to best ensure the USA team's success is the total number of gold medals.

### Objective 2: Value of Medals for Each Event Type (Team AA \> Individual AA \> Individual Apparatus)

From the table of the top 10 most decorated gold medal female athletes by apparatus, the USA, China, Brazil, and Great Britain make multiple appearances. The USA has athletes in the top 10 most decorated gold medalist for each apparatus as well as the top 5, but other countries do not (Appendix: Image 9). This allows us to assume that the USA has great potential in winning the team all-around since it is the only country with many of the most successful athletes in each apparatus in terms of the number of gold medals. In this case, valuing the team's all-around medal more than the individual all-around and individual apparatus will hopefully increase medal success in terms of gold medal count. Also when viewing the top 10 most decorated gold medal female athletes by apparatus, the USA's Simone Biles, appears in the balance beam as first, in floor exercise as first, in uneven bars as ninth, and in vault as first. Valuing the individual all-around events higher also may help team USA increase in our metric of success. Furthermore, since these events are harder to achieve than individual apparatuses because of the multiple sections within the event that need to also meet a standard, it will be harder for other countries to also benefit from this increased value.

From the table of the top 10 most decorated gold medal male athletes by apparatus, the USA, Japan, and China make multiple appearances. The only country that has an athlete in each apparatus for the top 10, is the USA (Appendix: Image 11). It could be slightly beneficial to the men's team to value the team's all-around success more than the other events. The US men's team also does not have a well-rounded athlete that places in the top 10 most decorated gold male athletes for each apparatus so we can assume valuing individual all-around successes over the other events would not help the US men's team but it also would not hurt it since other countries also do not have a highly decorated well-rounded competitor.

In the dot plots of the top 5 decorated gold medal female athletes' unique IDs by number of gold medals for each apparatus, US athletes make multiple appearances (Appendix: Image 10). In the dot plots of the top 5 decorated gold medal male athlete's unique IDs by number of gold medals for each apparatus, US athletes are present in multiple apparatuses but not many athletes are well decorated within each apparatus. But in vault there are two US athletes in the top 5 (Appendix: Image 12). Valuing individual apparatus events as regular events of weight 1 would best suit both the male and female teams' success against their competitors. Weighing the team all-around as 3 points is viable because not only do both the men's and women's USA have the potential to win based on this simulation, but there is less reliance and pressure on one singular person. Weighing the individual all-around as 2 will hopefully benefit the women's team with Simone Biles as the potential representative for this event. These weights will in hope best accommodate the male and female athletes and give them the best chance at success against other countries in terms of the total number of gold medals.

### Objective 3: All-Around vs Event Specialist vs Mixture

In our metric of success, we chose the total count of gold medals and we decided to weigh team all-around events as greater than individual all-around events and individual all-around great than the individual apparatuses. For the women's team, we believe it is best to select a team of five female athletes who are a combination of all-around and event-specialist gymnasts. Since the US women's team has a strong shot at winning the individual all-around with multi-apparatus highly gold medal decorated athlete Simone Biles and team all-around with other multiple highly decorated gold medalists who specialize in their apparatus, focusing on both would be an optimal strategy (Appendix: Image 10). For the men's team, we believe it is best to select a team of five male athletes who are also a combination of both all-around gymnasts and specialists. In the simulation, since 3 of the top 10 most gold medal-decorated male gymnasts in parallel bars are from the US and 7 of the top 10 in vault are from the US, there is a good chance that a male athlete from the US may be successful in those apparatuses (Appendix: Image 11). Since the US does not seem to have very many strong gold medal specialists in the other apparatuses, the men's team should fill the remaining positions with all-around gymnasts.

### Objective 4: Identifying 5 Athletes ...

## Discussion

## Appendix

### Work Cited

Camenker, Jacob. "How Old Is Simone Biles? Why Elite Olympic Gymnasts Typically Retire at a Young Age." Sporting News, 18 Sept. 2021, www.sportingnews.com/us/athletics/news/simone-biles-retire-age-olympics/1laom4i4u4wh1thcgta4nun2x. Accessed 20 Nov. 2023.

Meyers, Dvora. "Time for the End of the Teen Gymnast." FiveThirtyEight, 27 July 2021, fivethirtyeight.com/features/gymnasts-age-olympics/. Accessed 20 Nov. 2023.

"Paris 2024 Olympic Games: How Do Athletes Qualify?" Olympics, 8 Aug. 2021, olympics.com/en/news/paris-2024-olympic-games-how-do-athletes-qualify. Accessed 20 Nov. 2023.

Santos-Fernandez, Edgar, et al. "Bayesian Statistics Meets Sports: A Comprehensive Review." Journal of Quantitative Analysis in Sports, vol. 15, no. 4, Dec. 2019, pp. 289--312. www.degruyter.com, https://doi.org/10.1515/jqas-2018-0106.

"Tokyo 2020 Artistic Gymnastics - Olympic Results by Discipline." Olympics, olympics.com/en/olympic-games/tokyo-2020/results/artistic-gymnastics. Accessed 20 Nov. 2023.

"UCSAS 2024 USOPC DATA CHALLENGE." UConn Sports Analytics Symposium (UCSAS), statds.org/events/ucsas2024/challenge.html. Accessed 20 Nov. 2023.

Yang, Tae Young, and Tim Swartz. "A Two-Stage Bayesian Model for Predicting Winners in Major League Baseball." Journal of Data Science, vol. 2, no. 1, Aug. 2022, pp. 61--73. jds-online.org, https://doi.org/10.6339/JDS.2004.02(1).142.

### Additional Simulation Results

```{r additional-sims-tables}
#womens additional
UB_w_simul |>
  head(10) |>
  kable(caption = "Women's Uneven Bars Simulation Results ", col.names = c("Athlete", "Golds", "Silvers", "Bronzes", "Total Medals")) |>
  kable_styling(font_size = 9, latex_options = "HOLD_position")

#mens additional
FX_m_simul |>
  head(10) |>
  kable(caption = "Men's Floor Exercise Simulation Results ", col.names = c("Athlete", "Golds", "Silvers", "Bronzes", "Total Medals")) |>
  kable_styling(font_size = 9, latex_options = "HOLD_position")

HB_m_simul |>
  head(10) |>
  kable(caption = "Men's High Bar Simulation Results ", col.names = c("Athlete", "Golds", "Silvers", "Bronzes", "Total Medals")) |>
  kable_styling(font_size = 9, latex_options = "HOLD_position")

PH_m_simul |>
  head(10) |>
  kable(caption = "Men's Pommel Horse Simulation Results ", col.names = c("Athlete", "Golds", "Silvers", "Bronzes", "Total Medals")) |>
  kable_styling(font_size = 9, latex_options = "HOLD_position")

SR_m_simul |>
  head(10) |>
  kable(caption = "Men's Still Rings Simulation Results ", col.names = c("Athlete", "Golds", "Silvers", "Bronzes", "Total Medals")) |>
  kable_styling(font_size = 9, latex_options = "HOLD_position")
```

### Extra Visualizations

```{r execution-difficulty-distributions}
## GOING INTO APPENDIX
combined |>
  filter(Gender == "w") |>
  ggplot(aes(x = E_Score)) +
  geom_density() +
  facet_wrap(~ Apparatus) +
  labs(title = "Distribution of Female Gymnasts' Execution Scores",
       subtitle = "By Apparatus",
       x = "Execution Score",
       y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(size = 8),
        plot.subtitle = element_text(size = 7),
        axis.text = element_text(size = 7),
        axis.title = element_text(size = 7))

combined |>
  filter(Gender == "w") |>
  ggplot(aes(x = D_Score)) +
  geom_density() +
  facet_wrap(~ Apparatus) +
    labs(title = "Distribution of Female Gymnasts' Difficulty Scores",
         subtitle = "By Apparatus",
         x = "Difficulty Score",
         y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(size = 8),
        plot.subtitle = element_text(size = 7),
        axis.text = element_text(size = 7),
        axis.title = element_text(size = 7))

combined |>
  filter(Gender == "m") |>
  ggplot(aes(x = E_Score)) +
  geom_density() +
  facet_wrap(~ Apparatus) +
  labs(title = "Distribution of Male Gymnasts' Execution Scores",
       subtitle = "By Apparatus",
       x = "Execution Score",
       y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(size = 8),
        plot.subtitle = element_text(size = 7),
        axis.text = element_text(size = 7),
        axis.title = element_text(size = 7))

combined |>
  filter(Gender == "m") |>
  ggplot(aes(x = D_Score)) +
  geom_density() +
  facet_wrap(~ Apparatus) +
    labs(title = "Distribution of Male Gymnasts' Difficulty Scores",
         subtitle = "By Apparatus",
         x = "Difficulty Score",
         y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(size = 8),
        plot.subtitle = element_text(size = 7),
        axis.text = element_text(size = 7),
        axis.title = element_text(size = 7))
```

```{r unique-athletes}
number_athletes |>
  filter(Round %in% AA_team) |>
  ggplot(aes(x = athletes_participated)) +
    geom_histogram() +
    facet_wrap(~ Round) +
    labs(x = "Number of Unique Athletes Competed",
         y = "Frequency",
         title = "1) Distribution of Athletes Competed at Competition Rounds",
         subtitle = "All Around or Team All Arounds")

number_athletes |>
  filter(Round == "AAfinal") |>
  ggplot(aes(x = athletes_participated)) +
    geom_histogram() +
    labs(x = "Number of Unique Athletes Competed",
         y = "Frequency",
         title = "2) Distribution of Athletes Competed at AA Finals")

number_athletes |>
  filter(Round == "final") |>
  ggplot(aes(x = athletes_participated)) +
    geom_histogram() +
    facet_wrap(~ Round) +
    labs(x = "Number of Unique Athletes Competed",
         y = "Frequency",
         title = "3) Distribution of Athletes Competed at Final Rounds",
         subtitle = "Individual Apparatuses")

ggplot(number_athletes, aes(x = athletes_participated)) +
  geom_histogram() +
  labs(x = "Number of Unique Athletes Competed",
       y = "Frequency",
       title = "4) Distribution of Athletes Competed at Competitions")

```

**Image 5)**

```{r}
#WOMEN'S MEDAL METRICS VISUALS
#Prioritizing Gold Medals
ggplot(data = tot_w_simul, aes(x = USA, y = Golds, color = USA)) + geom_point() + facet_wrap(~Apparatus) + labs(title = "Individual Female Athlete's Number of Gold Medals", subtitle = "by Country and by Apparatus", y = "Number of Gold Medals") +coord_flip()

#Prioritizing Total Medals
ggplot(data = tot_w_simul, aes(x = USA, y = Total_Medals, color = USA)) + geom_point() + facet_wrap(~Apparatus) + labs(title = "Individual Female Athlete's Number of Total Medals", subtitle = "by Country and by Apparatus", y = "Number of Total Medals") +coord_flip()

#Prioritizing Weighted Medals
ggplot(data = tot_w_simul, aes(x = USA, y = Medal_Weight, color = USA)) + geom_point() + facet_wrap(~Apparatus) + labs(title = "Individual Female Athlete's Medal Weight", subtitle = "by Country and by Apparatus", y = "Medal Weight") +coord_flip()
```

**Image 6)**

```{r}
#MEN'S MEDAL METRICS VISUALS
#Prioritizing Gold Medals
ggplot(data = tot_m_simul, aes(x = USA, y = Golds, color = USA)) + geom_point() + facet_wrap(~Apparatus) + labs(title = "Individual Male Athlete's Number of Gold Medals", subtitle = "by Country and by Apparatus", y = "Number of Gold Medals") +coord_flip()

#Prioritizing Total Medals
ggplot(data = tot_m_simul, aes(x = USA, y = Total_Medals, color = USA)) + geom_point() + facet_wrap(~Apparatus) + labs(title = "Individual Male Athlete's Number of Total Medals", subtitle = "by Country and by Apparatus", y = "Number of Total Medals") +coord_flip()

#Prioritizing Weighted Medals
ggplot(data = tot_m_simul, aes(x = USA, y = Medal_Weight, color = USA)) + geom_point() + facet_wrap(~Apparatus) + labs(title = "Individual Male Athlete's Medal Weight", subtitle = "by Country and by Apparatus", y = "Medal Weight") +coord_flip()

```

**Image 7)**

Women:

-   Top 5 athletes by apparatus for each of the 3 success metrics

-   Sum of each of the 3 metrics made by athletes from the US and non-US countries

```{r}
#WOMEN
#Top 5 athletes by apparatus for gold count
tot_w_simul %>% 
  group_by(Apparatus) %>% 
  slice_max(order_by = Golds, n = 5) %>% 
  kable()

#Top 5 athletes by apparatus for total medal count
tot_w_simul %>% 
  group_by(Apparatus) %>% 
  slice_max(order_by = Total_Medals, n = 5) %>% 
  kable()

#Top 5 athletes by apparatus for weighted medal count
tot_w_simul %>% 
  group_by(Apparatus) %>% 
  slice_max(order_by = Medal_Weight, n = 5) %>% 
  kable()


#total proportion for each medal metric
tot_w_simul %>% 
  group_by(USA) %>% 
  summarise(sumGolds = sum(Golds),
            sumTotal = sum(Total_Medals),
            sumWeighted = sum(Medal_Weight)) %>% 
  kable()

```

For the women's simulation when looking at the top 5 athletes by:

-   *Gold Medal Count* for each apparatus there are 10 out of 20 from the US: balance beam (BB): 3, floor exercise (FX): 3, uneven bars (UB): 2, and vault (VT): 2

    -   USA makes up 51% of the total women's gold medals in the simulation.

-   *Total Medal Count* for each apparatus there are 12 out of 20 from the US: balance beam (BB): 3, floor exercise (FX): 4, uneven bars (UB): 1, vault (VT): 4

    -   USA makes up 47% of the total women's medals in the simulation.

-   *Weighted Medal Count* for each apparatus there are 10 out of 20 from the US: balance beam (BB): 3, floor exercise (FX): 2, uneven bars (UB): 1, vault (VT): 4

    -   USA makes up 48% of the weight of women's medals in the simulation.

**Image 8)**

Men:

-   Top 5 athletes by apparatus for each of the 3 success metrics

-   Sum of each of the 3 metrics made by athletes from the US and non-US countries

```{r}
#MEN
#Top 5 athletes by apparatus for gold count
tot_m_simul %>% 
  group_by(Apparatus) %>% 
  slice_max(order_by = Golds, n = 5) %>% 
  kable()

#Top 5 athletes by apparatus for total medal count
tot_m_simul %>% 
  group_by(Apparatus) %>% 
  slice_max(order_by = Total_Medals, n = 5) %>% 
  kable()

#Top 5 athletes by apparatus for weighted medal count
tot_m_simul %>% 
  group_by(Apparatus) %>% 
  slice_max(order_by = Medal_Weight, n = 5) %>% 
  kable()

#total proportion for each medal metric
tot_m_simul %>% 
  group_by(USA) %>% 
  summarise(sumGolds = sum(Golds),
            sumTot = sum(Total_Medals),
            sumWeighted = sum(Medal_Weight)) %>% 
  kable()
```

For the men's simulation when looking at the top 5 athletes by:

-   *Gold Medal Count* for each apparatus there are 5 out of 30 from the US: floor exercise (FX): 1, high bar (HB): 1, parallel bars (PB): 1 pommel horse (PH): 0, still rings (SR): 0, vault (VT): 2

    -   USA makes up 21% of the total men's gold medals in the simulation.

-   *Total Medal Count* for each apparatus there are 4 out of 30 from the US: floor exercise (FX): 1, high bar (HB): 1, parallel bars (PB): 0, pommel horse (PH): 0, still rings (SR): 0, vault (VT): 2

    -   USA makes up 24% of the total men's medals in the simulation.

-   *Weighted Medal Count* for each apparatus there are 4 out of 30 from the US: floor exercise (FX): 1, high bar (HB): 1, parallel bars (PB): 0, pommel horse (PH): 0, still rings (SR): 0, vault (VT): 2

    -   USA makes up 23% of the weight of men's medals in the simulation.

**Image 9)**

```{r}
tot_w_simul %>% 
  dplyr::select(unique_id, Golds, Country, Apparatus, USA) %>% 
  group_by(Apparatus) %>% 
  slice_max(order_by = Golds, n = 10)
```

**Image 10)**

```{r echo=FALSE}
#selects top 5 decorated gold medal athletes by apparatus
top10_women <- tot_w_simul %>% 
  group_by(Apparatus) %>% 
  slice_max(order_by = Golds, n = 5)
ggplot(data = top10_women,aes(x = unique_id, y =Golds, color = USA, shape = Apparatus)) + geom_point() + facet_wrap(~Apparatus) +theme(axis.text.x = element_text(angle = 45, hjust = 1)) + ylim(0, 200) + labs(title = "10) Women's Unique ID by Number of Gold Medals", subtitle = "by Apparatus", x = "Unique ID ", y = "Number of Gold Medals")
```

**Image 11)**

```{r}
tot_m_simul %>% 
  dplyr::select(unique_id, Golds, Country, Apparatus, USA) %>% 
  group_by(Apparatus) %>% 
  slice_max(order_by = Golds, n = 10)
```

**Image 12)**

```{r}
#selects top 5 decorated gold medal athletes by apparatus
top10_men <- tot_m_simul %>% 
  group_by(Apparatus) %>% 
  slice_max(order_by = Golds, n = 5)
ggplot(data = top10_men,aes(x = unique_id, y =Golds, color = USA, shape = Apparatus)) + geom_point() + facet_wrap(~Apparatus) +theme(axis.text.x = element_text(angle = 45, hjust = 1)) + ylim(0, 100) + labs(title = "12) Men's Unique ID by Number of Gold Medals", subtitle = "by Apparatus", x = "Unique ID ", y = "Number of Gold Medals")
```

***Note:*** The excessive unique ids display that there is not much overlap in the top 5 most gold medal decorated athletes on the men's team and therefore the lack of well-rounded gymnasts.

### Diagnostics

```{r}
#MCMC diagnostic check
get_mcmc_samples <- function(simulation_results) {
  mcmc_data <- as.mcmc(simulation_results$Total_Medals)
  return(mcmc_data)
}

mcmc_results <- simulate_full_competition(combined, "FX", "w", mu_0, sig_0, k_0, v_0, 100)
mcmc_samples <- get_mcmc_samples(mcmc_results)

coda::traceplot(mcmc_samples, main = "Trace Plot of Total Medals")

# Effective sample size
effectiveSize(mcmc_samples)
#A common rule of thumb is that an effective sample size should be at least 1% or 5% of the total number of samples, depending on the context.

# Autocorrelation plot
autocorr.plot(mcmc_samples)

mcmc_samples <- get_mcmc_samples(mcmc_results)

# Histogram of MCMC samples
hist(mcmc_samples, main = "Histogram of Total Medals", xlab = "Total Medals")

```

```{r}
# Diagnositcs for Women

# Summary stats for total w medals
mcmcTrace <- mcmc(tot_w_simul$Total_Medals)
summary(mcmcTrace)

# Acceptance rate for total w medals
acceptanceRate <- 1 - rejectionRate(mcmcTrace)
acceptanceRate

# Effective size for total w medals
effectiveSize(mcmcTrace)

# Mixing total w medals
plot(mcmcTrace)

autocorr.plot(mcmcTrace)

# Diagnostics For Men

# Summary stats for total w medals
mcmcTrace1 <- mcmc(tot_m_simul$Total_Medals)
summary(mcmcTrace1)

# Acceptance rate for total w medals
acceptanceRate <- 1 - rejectionRate(mcmcTrace1)
acceptanceRate

# Effective size for total w medals
effectiveSize(mcmcTrace1)

# Mixing total w medals
plot(mcmcTrace1)

autocorr.plot(mcmcTrace1)
```
